@using Microsoft.AspNetCore.Http.Extensions
@using Microsoft.AspNetCore.Identity
@using TestProject.Extentions
@model TestProject.Models.ViewModels.TripViewModel

@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Details";
}

<div asp-validation-summary="ModelOnly" class="text-danger"></div>

<h1>Детайли</h1>

<div>
    <h4>Пътуване</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            Шофьор
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DriverName)
        </dd>

        <dt class="col-sm-2">
            Телефонен номер
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DriverPhoneNumber)
        </dd>

        <dt class="col-sm-2">
            Станал шофьор на
        </dt>
        <dd class="col-sm-10">
            <span>@(Model.Driver?.DateOfDriverAcceptance?.ToString("yyyy-MM-dd") ?? "Вече не съществува")</span>
        </dd>

        <dt class="col-sm-2">
            Начална позиция
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.StartPosition)
        </dd>

        <dt class="col-sm-2">
            Дестинация
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Destination)
        </dd>

        <dt class="col-sm-2">
            Час на тръгване
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DepartureTime)
        </dd>

        <dt class="col-sm-2">
            Час на връщане
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ReturnTime)
        </dd>

        <dt class="col-sm-2">
            Цена
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Price)
        </dd>

        <dt class="col-sm-2">
            Общ брой места
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.TotalSeats)
        </dd>

        <dt class="col-sm-2">
            Свободни места
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FreeSeats)
        </dd>

        <dt class="col-sm-2">
            Модел на колата
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CarModel)
        </dd>

        <dt class="col-sm-2">
            Регистрационен номер
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PlateNumber)
        </dd>

        <dt class="col-sm-2">
            Снимка
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ImagePath)
        </dd>

        <dt class="col-sm-2">
            Статус
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.StatusTrip)
        </dd>

        @if (Model.IsRecurring == true)
        {
            <dt class="col-sm-2">
                Повтарящо се
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.IsRecurring)
            </dd>

            <dt class="col-sm-2">
                Интервал на повторение
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.RecurrenceInterval)
            </dd>

            <dt class="col-sm-2">
                Следваща дата
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.NextRunDate)
            </dd>
        }
    </dl>
</div>

<div>
    @if (Model.FreeSeats > 0)
    {

        if (!Model.Requests.Any(r => r.UserId == User.Id()))
        {

            <form asp-controller="Requests" asp-action="SendJoinRequest" method="post">
                <input type="hidden" name="returnUrl" value="@ViewBag.ReturnUrl" />
                <input type="hidden" name="tripId" value="@Model.Id" />
                <button type="submit" class="btn btn-primary">Заяви място</button>
            </form>
        }
        else
        {
            <p>Вече имате заявка</p>
        }
    }
    else
    {
        <p>Няма свободни места.</p>
    }  

    <a asp-controller="Trips" asp-action="Edit" asp-route-id="@Model.Id" asp-route-returnUrl="@Context.Request.Path">Edit</a> |
    @{
        if (ViewBag.ReturnUrl as bool? == true)
        {
            <a href="@ViewBag.ReturnUrl">Return To List</a> 
        }
        else
        {
            <a asp-action="MyDriverTrips" asp-controller="DriverTrips">Върни се обратно</a>
        }
    }
</div>



@if (Model.StatusTrip == TripStatus.Finished)
{
    <h3>Ревюта</h3>
    <div>
        @if (Model.Ratings.Any())
        {
            @foreach (var rating in Model.Ratings)
            {
                <div>
                    <p>User: @(rating.User.UserName ?? "Анонимно")</p>
                    <p>Score: @rating.Score/5</p>
                    <p>@(rating.Comment ?? "")</p>
                    <small>@rating.Date.ToString("yyyy-MM-dd")</small>
                </div>
            }
        }
        else
        {
            <p>Няма ревюта.</p>
        }
    </div>

    @if (User.Identity.IsAuthenticated)
    {
        var user = await UserManager.GetUserAsync(User);
        bool canReview = user != null &&
                         Model.StatusTrip == TripStatus.Finished &&
                          Model.TripParticipants.Any(tp => tp.UserId.Equals(user.Id, StringComparison.OrdinalIgnoreCase));

        @if (canReview)
        {
            <a asp-controller="Ratings"
            asp-action="Create"
            asp-route-tripId="@Model.Id"
            class="btn btn-primary">
                Остави ревю
            </a>
        }
        else
        {
            <p>Не може да оставиш ревю.</p>
        }

    }
}
else
{
    <p>Ревюта може да бюдат оставени само след като пътуването приключи.</p>
}
