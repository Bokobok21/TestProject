@using Microsoft.AspNetCore.Identity
@model TestProject.Models.ViewModels.TripViewModel

@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Details";
}

<div asp-validation-summary="ModelOnly" class="text-danger"></div>

<h1>Details</h1>

<div>
    <h4>Trip</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Driver)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DriverName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.StartPosition)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.StartPosition)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Destination)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Destination)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.DepartureTime)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DepartureTime)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ReturnTime)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ReturnTime)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Price)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Price)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.TotalSeats)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.TotalSeats)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.FreeSeats)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.FreeSeats)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CarModel)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CarModel)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PlateNumber)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.PlateNumber)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ImagePath)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ImagePath)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.StatusTrip)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.StatusTrip)
        </dd>

        @if(Model.IsRecurring == true)
        {
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.IsRecurring)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.IsRecurring)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.RecurrenceInterval)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.RecurrenceInterval)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.NextRunDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.NextRunDate)
        </dd>
        }

    </dl>
</div>
<div>
    @if (Model.FreeSeats > 0)
    {
        <form asp-controller="Requests" asp-action="SendJoinRequest" method="post">
            <input type="hidden" name="tripId" value="@Model.Id" />
            <button type="submit" class="btn btn-primary">Join Trip</button>
        </form>
    }
    else
    {
        <p>No free seats available.</p>
    }
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>



@if (Model.StatusTrip == TripStatus.Finished)
{
    <h3>Reviews</h3>
    <div>
        @if (Model.Ratings.Any())
        {
            @foreach (var rating in Model.Ratings)
            {
                <div>
                    <p>User: @(rating.User.UserName ?? "Anonymous")</p>
                    <p>Score: @rating.Score/5</p>
                    <p>@(rating.Comment ?? "")</p>
                    <small>@rating.Date.ToString("yyyy-MM-dd")</small>
                </div>
            }
        }
        else
        {
            <p>No reviews yet.</p>
        }
    </div>

    @if (User.Identity.IsAuthenticated)
    {
        var user = await UserManager.GetUserAsync(User);
        bool canReview = user != null &&
                         Model.StatusTrip == TripStatus.Finished &&
                          Model.TripParticipants.Any(tp => tp.UserId.Equals(user.Id, StringComparison.OrdinalIgnoreCase));

        @if (canReview)
        {
            <a asp-controller="Ratings"
            asp-action="Create"
            asp-route-tripId="@Model.Id"
            class="btn btn-primary">
                Leave a Review
            </a>
        }
        else
        {
            <p>You can't leave a review.</p>
        }

    }
}
else
{
    <p>Reviews can only be left after the trip has finished.</p>
}
